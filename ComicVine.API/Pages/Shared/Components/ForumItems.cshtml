@using ComicVine.API.Pages
@model (IEnumerable<Comicvine.Core.Parsers.Thread>, Func<Comicvine.Core.Parsers.Thread,string>)


<div id="thread-container" class="generic-container">
    <span class="thread-odd thread-item thread-header thread-index">#</span>
    <span class="thread-odd thread-item thread-title thread-header">Title</span>
    <span class="thread-odd thread-item thread-header">Board</span>
    <span class="thread-odd thread-item thread-header">Author</span>
    <span class="thread-odd thread-item thread-header">Posts</span>
    <span class="thread-odd thread-item thread-header">Views</span>
    @foreach (var (index, thread) in Model.Item1.Select((t, i) => (i,t))) {
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item thread-index")"></span>
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item thread-title")">
            <a href="@Url.Content(Model.Item2(thread))">
                @await Html.PartialAsync("Shared/Components/Lock", thread.IsLocked)
                @await Html.PartialAsync("Shared/Components/Pin" , thread.IsPinned)
                @Html.Raw(thread.Thread.Text)
            </a>
        </span>
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item")">
            @Html.Raw(thread.Board.Text)
        </span>
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item")">
            <a href="@thread.Creator.Link">
                @thread.Creator.Text
            </a>
        </span>
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item")">
            @thread.TotalPosts
        </span>
        <span class="@Url.Content($"{Util.GetThreadRow(index)} thread-item")">
            @thread.TotalView
        </span>
    }
</div>