@using ComicVine.API.Pages
<!DOCTYPE html>
<html lang="en">
<head>
    <title>@Html.Raw(ViewData[Keys.Title])</title>
    <meta charset="UTF-8"/>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link rel="stylesheet" href="/css/main.css">
</head>
<body>
<header>
    <nav>
        <div id="nav-root">
            <span class="@Util.GetHighlightClass(ViewData, MainHighlight.Vine)">
                <a href="/forums">Vine</a>
            </span>
            <span class="@Util.GetHighlightClass(ViewData, MainHighlight.Archives)">
                <a href="/archives/forums">Archives</a>
            </span>
            <span class="@Util.GetHighlightClass(ViewData, MainHighlight.Search)">
                <a href="/search">Search</a>
            </span>
            <span class="@Util.GetHighlightClass(ViewData, MainHighlight.Stats)">
                <a href="/stats">Stats</a>
            </span>
        </div>
    </nav>
</header>
<main id="container">
    <h1 class="heading">@Html.Raw(ViewData[Keys.Headings])</h1>
    @RenderBody()
</main>
<footer></footer>
<script>
// loads lazy images
let lazyLoad = node =>
    node.setAttribute("src", node.getAttribute("data-src"))

document
    .querySelectorAll(".js-lazy-load-image")
    .forEach(lazyLoad)
</script>
</body>
</html>